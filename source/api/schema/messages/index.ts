// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard";

export const ErrorMessage = autoguard.guards.Object.of({
	"errors": autoguard.guards.Array.of(autoguard.guards.String)
});

export type ErrorMessage = ReturnType<typeof ErrorMessage["as"]>;

export const RegisterRequest = autoguard.guards.Object.of({
	"username": autoguard.guards.String,
	"password": autoguard.guards.String,
	"name": autoguard.guards.String,
	"key_id": autoguard.guards.String
});

export type RegisterRequest = ReturnType<typeof RegisterRequest["as"]>;

export const RegisterResponse = autoguard.guards.Object.of({
	"token": autoguard.guards.String
});

export type RegisterResponse = ReturnType<typeof RegisterResponse["as"]>;

export namespace Autoguard {
	export const Guards = {
		"ErrorMessage": autoguard.guards.Reference.of(() => ErrorMessage),
		"RegisterRequest": autoguard.guards.Reference.of(() => RegisterRequest),
		"RegisterResponse": autoguard.guards.Reference.of(() => RegisterResponse)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
