// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import { guards as autoguard } from "@joelek/ts-autoguard";

export type LAUNCH = {
	"type": "LAUNCH",
	"requestId": number,
	"appId": string
};

export const LAUNCH = autoguard.Object.of<LAUNCH>({
	"type": autoguard.StringLiteral.of("LAUNCH"),
	"requestId": autoguard.Number,
	"appId": autoguard.String
});

export type STOP = {
	"type": "STOP",
	"requestId": number,
	"sessionId": string
};

export const STOP = autoguard.Object.of<STOP>({
	"type": autoguard.StringLiteral.of("STOP"),
	"requestId": autoguard.Number,
	"sessionId": autoguard.String
});

export type GET_STATUS = {
	"type": "GET_STATUS",
	"requestId": number
};

export const GET_STATUS = autoguard.Object.of<GET_STATUS>({
	"type": autoguard.StringLiteral.of("GET_STATUS"),
	"requestId": autoguard.Number
});

export type GET_APP_AVAILABILITY = {
	"type": "GET_APP_AVAILABILITY",
	"requestId": number,
	"appId": string[]
};

export const GET_APP_AVAILABILITY = autoguard.Object.of<GET_APP_AVAILABILITY>({
	"type": autoguard.StringLiteral.of("GET_APP_AVAILABILITY"),
	"requestId": autoguard.Number,
	"appId": autoguard.Array.of(autoguard.String)
});

export type SET_VOLUME = {
	"type": "SET_VOLUME",
	"requestId": number,
	"volume": ({
		"level": number
	} | {
		"muted": boolean
	})
};

export const SET_VOLUME = autoguard.Object.of<SET_VOLUME>({
	"type": autoguard.StringLiteral.of("SET_VOLUME"),
	"requestId": autoguard.Number,
	"volume": autoguard.Union.of(
		autoguard.Object.of<{
			"level": number
		}>({
			"level": autoguard.Number
		}),
		autoguard.Object.of<{
			"muted": boolean
		}>({
			"muted": autoguard.Boolean
		})
	)
});

export type RECEIVER_STATUS = {
	"type": "RECEIVER_STATUS",
	"requestId": number,
	"status": {
		"applications"?: {
			"appId": string,
			"displayName": string,
			"iconUrl": string,
			"isIdleScreen": boolean,
			"launchedFromCloud": boolean,
			"namespaces": {
				"name": string
			}[],
			"sessionId": string,
			"statusText": string,
			"transportId": string
		}[],
		"userEq": {},
		"volume": {
			"controlType": string,
			"level": number,
			"muted": boolean,
			"stepInterval": number
		}
	}
};

export const RECEIVER_STATUS = autoguard.Object.of<RECEIVER_STATUS>({
	"type": autoguard.StringLiteral.of("RECEIVER_STATUS"),
	"requestId": autoguard.Number,
	"status": autoguard.Object.of<{
		"applications"?: {
			"appId": string,
			"displayName": string,
			"iconUrl": string,
			"isIdleScreen": boolean,
			"launchedFromCloud": boolean,
			"namespaces": {
				"name": string
			}[],
			"sessionId": string,
			"statusText": string,
			"transportId": string
		}[],
		"userEq": {},
		"volume": {
			"controlType": string,
			"level": number,
			"muted": boolean,
			"stepInterval": number
		}
	}>({
		"applications": autoguard.Union.of(
			autoguard.Undefined,
			autoguard.Array.of(autoguard.Object.of<{
				"appId": string,
				"displayName": string,
				"iconUrl": string,
				"isIdleScreen": boolean,
				"launchedFromCloud": boolean,
				"namespaces": {
					"name": string
				}[],
				"sessionId": string,
				"statusText": string,
				"transportId": string
			}>({
				"appId": autoguard.String,
				"displayName": autoguard.String,
				"iconUrl": autoguard.String,
				"isIdleScreen": autoguard.Boolean,
				"launchedFromCloud": autoguard.Boolean,
				"namespaces": autoguard.Array.of(autoguard.Object.of<{
					"name": string
				}>({
					"name": autoguard.String
				})),
				"sessionId": autoguard.String,
				"statusText": autoguard.String,
				"transportId": autoguard.String
			}))
		),
		"userEq": autoguard.Object.of<{}>({}),
		"volume": autoguard.Object.of<{
			"controlType": string,
			"level": number,
			"muted": boolean,
			"stepInterval": number
		}>({
			"controlType": autoguard.String,
			"level": autoguard.Number,
			"muted": autoguard.Boolean,
			"stepInterval": autoguard.Number
		})
	})
});

export type Autoguard = {
	"LAUNCH": LAUNCH,
	"STOP": STOP,
	"GET_STATUS": GET_STATUS,
	"GET_APP_AVAILABILITY": GET_APP_AVAILABILITY,
	"SET_VOLUME": SET_VOLUME,
	"RECEIVER_STATUS": RECEIVER_STATUS
};

export const Autoguard = {
	"LAUNCH": LAUNCH,
	"STOP": STOP,
	"GET_STATUS": GET_STATUS,
	"GET_APP_AVAILABILITY": GET_APP_AVAILABILITY,
	"SET_VOLUME": SET_VOLUME,
	"RECEIVER_STATUS": RECEIVER_STATUS
};
