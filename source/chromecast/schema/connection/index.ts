// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";

export const CONNECT = autoguard.guards.Object.of({
	"type": autoguard.guards.StringLiteral.of("CONNECT")
});

export type CONNECT = ReturnType<typeof CONNECT["as"]>;

export const CLOSE = autoguard.guards.Object.of({
	"type": autoguard.guards.StringLiteral.of("CLOSE")
});

export type CLOSE = ReturnType<typeof CLOSE["as"]>;

export namespace Autoguard {
	export const Guards = {
		"CONNECT": autoguard.guards.Reference.of(() => CONNECT),
		"CLOSE": autoguard.guards.Reference.of(() => CLOSE)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
