// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard";

export const Envelope = autoguard.guards.Object.of({
	"type": autoguard.guards.String,
	"data": autoguard.guards.Any,
	"id": autoguard.guards.Union.of(
		autoguard.guards.Undefined,
		autoguard.guards.String
	)
});

export type Envelope = ReturnType<typeof Envelope["as"]>;

export namespace Autoguard {
	export const Guards = {
		"Envelope": autoguard.guards.Reference.of(() => Envelope)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
