// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import { PlaylistBase } from "../../api/schema/objects";
import { PlaylistItemBase } from "../../api/schema/objects";
import { guards as autoguard } from "@joelek/ts-autoguard";

export type SetToken = {
	"token"?: string
};

export const SetToken = autoguard.Object.of<SetToken>({
	"token": autoguard.Union.of(
		autoguard.Undefined,
		autoguard.String
	)
});

export type CreatePlaylistRequest = {
	"playlist": {
		"title": string,
		"description": string
	}
};

export const CreatePlaylistRequest = autoguard.Object.of<CreatePlaylistRequest>({
	"playlist": autoguard.Object.of<{
		"title": string,
		"description": string
	}>({
		"title": autoguard.String,
		"description": autoguard.String
	})
});

export type CreatePlaylistResponse = {
	"errors": string[],
	"playlist_id": string
};

export const CreatePlaylistResponse = autoguard.Object.of<CreatePlaylistResponse>({
	"errors": autoguard.Array.of(autoguard.String),
	"playlist_id": autoguard.String
});

export type CreatePlaylist = {
	"playlist": PlaylistBase
};

export const CreatePlaylist = autoguard.Object.of<CreatePlaylist>({
	"playlist": autoguard.Reference.of<PlaylistBase>(() => PlaylistBase)
});

export type DeletePlaylistRequest = {
	"playlist": {
		"playlist_id": string
	}
};

export const DeletePlaylistRequest = autoguard.Object.of<DeletePlaylistRequest>({
	"playlist": autoguard.Object.of<{
		"playlist_id": string
	}>({
		"playlist_id": autoguard.String
	})
});

export type DeletePlaylistResponse = {
	"errors": string[]
};

export const DeletePlaylistResponse = autoguard.Object.of<DeletePlaylistResponse>({
	"errors": autoguard.Array.of(autoguard.String)
});

export type DeletePlaylist = {
	"playlist": PlaylistBase
};

export const DeletePlaylist = autoguard.Object.of<DeletePlaylist>({
	"playlist": autoguard.Reference.of<PlaylistBase>(() => PlaylistBase)
});

export type UpdatePlaylistRequest = {
	"playlist": {
		"playlist_id": string,
		"title": string,
		"description": string
	}
};

export const UpdatePlaylistRequest = autoguard.Object.of<UpdatePlaylistRequest>({
	"playlist": autoguard.Object.of<{
		"playlist_id": string,
		"title": string,
		"description": string
	}>({
		"playlist_id": autoguard.String,
		"title": autoguard.String,
		"description": autoguard.String
	})
});

export type UpdatePlaylistResponse = {
	"errors": string[]
};

export const UpdatePlaylistResponse = autoguard.Object.of<UpdatePlaylistResponse>({
	"errors": autoguard.Array.of(autoguard.String)
});

export type UpdatePlaylist = {
	"playlist": PlaylistBase
};

export const UpdatePlaylist = autoguard.Object.of<UpdatePlaylist>({
	"playlist": autoguard.Reference.of<PlaylistBase>(() => PlaylistBase)
});

export type CreatePlaylistItemRequest = {
	"playlist_item": {
		"playlist_id": string,
		"track_id": string
	}
};

export const CreatePlaylistItemRequest = autoguard.Object.of<CreatePlaylistItemRequest>({
	"playlist_item": autoguard.Object.of<{
		"playlist_id": string,
		"track_id": string
	}>({
		"playlist_id": autoguard.String,
		"track_id": autoguard.String
	})
});

export type CreatePlaylistItemResponse = {
	"errors": string[],
	"playlist_item_id": string
};

export const CreatePlaylistItemResponse = autoguard.Object.of<CreatePlaylistItemResponse>({
	"errors": autoguard.Array.of(autoguard.String),
	"playlist_item_id": autoguard.String
});

export type CreatePlaylistItem = {
	"playlist_item": PlaylistItemBase
};

export const CreatePlaylistItem = autoguard.Object.of<CreatePlaylistItem>({
	"playlist_item": autoguard.Reference.of<PlaylistItemBase>(() => PlaylistItemBase)
});

export type DeletePlaylistItemRequest = {
	"playlist_item": {
		"playlist_item_id": string
	}
};

export const DeletePlaylistItemRequest = autoguard.Object.of<DeletePlaylistItemRequest>({
	"playlist_item": autoguard.Object.of<{
		"playlist_item_id": string
	}>({
		"playlist_item_id": autoguard.String
	})
});

export type DeletePlaylistItemResponse = {
	"errors": string[]
};

export const DeletePlaylistItemResponse = autoguard.Object.of<DeletePlaylistItemResponse>({
	"errors": autoguard.Array.of(autoguard.String)
});

export type DeletePlaylistItem = {
	"playlist_item": PlaylistItemBase
};

export const DeletePlaylistItem = autoguard.Object.of<DeletePlaylistItem>({
	"playlist_item": autoguard.Reference.of<PlaylistItemBase>(() => PlaylistItemBase)
});

export type UpdatePlaylistItemRequest = {
	"playlist_item": {
		"playlist_item_id": string,
		"number": number
	}
};

export const UpdatePlaylistItemRequest = autoguard.Object.of<UpdatePlaylistItemRequest>({
	"playlist_item": autoguard.Object.of<{
		"playlist_item_id": string,
		"number": number
	}>({
		"playlist_item_id": autoguard.String,
		"number": autoguard.Number
	})
});

export type UpdatePlaylistItemResponse = {
	"errors": string[]
};

export const UpdatePlaylistItemResponse = autoguard.Object.of<UpdatePlaylistItemResponse>({
	"errors": autoguard.Array.of(autoguard.String)
});

export type UpdatePlaylistItem = {
	"playlist_item": PlaylistItemBase
};

export const UpdatePlaylistItem = autoguard.Object.of<UpdatePlaylistItem>({
	"playlist_item": autoguard.Reference.of<PlaylistItemBase>(() => PlaylistItemBase)
});

export type Autoguard = {
	"SetToken": SetToken,
	"CreatePlaylistRequest": CreatePlaylistRequest,
	"CreatePlaylistResponse": CreatePlaylistResponse,
	"CreatePlaylist": CreatePlaylist,
	"DeletePlaylistRequest": DeletePlaylistRequest,
	"DeletePlaylistResponse": DeletePlaylistResponse,
	"DeletePlaylist": DeletePlaylist,
	"UpdatePlaylistRequest": UpdatePlaylistRequest,
	"UpdatePlaylistResponse": UpdatePlaylistResponse,
	"UpdatePlaylist": UpdatePlaylist,
	"CreatePlaylistItemRequest": CreatePlaylistItemRequest,
	"CreatePlaylistItemResponse": CreatePlaylistItemResponse,
	"CreatePlaylistItem": CreatePlaylistItem,
	"DeletePlaylistItemRequest": DeletePlaylistItemRequest,
	"DeletePlaylistItemResponse": DeletePlaylistItemResponse,
	"DeletePlaylistItem": DeletePlaylistItem,
	"UpdatePlaylistItemRequest": UpdatePlaylistItemRequest,
	"UpdatePlaylistItemResponse": UpdatePlaylistItemResponse,
	"UpdatePlaylistItem": UpdatePlaylistItem
};

export const Autoguard = {
	"SetToken": SetToken,
	"CreatePlaylistRequest": CreatePlaylistRequest,
	"CreatePlaylistResponse": CreatePlaylistResponse,
	"CreatePlaylist": CreatePlaylist,
	"DeletePlaylistRequest": DeletePlaylistRequest,
	"DeletePlaylistResponse": DeletePlaylistResponse,
	"DeletePlaylist": DeletePlaylist,
	"UpdatePlaylistRequest": UpdatePlaylistRequest,
	"UpdatePlaylistResponse": UpdatePlaylistResponse,
	"UpdatePlaylist": UpdatePlaylist,
	"CreatePlaylistItemRequest": CreatePlaylistItemRequest,
	"CreatePlaylistItemResponse": CreatePlaylistItemResponse,
	"CreatePlaylistItem": CreatePlaylistItem,
	"DeletePlaylistItemRequest": DeletePlaylistItemRequest,
	"DeletePlaylistItemResponse": DeletePlaylistItemResponse,
	"DeletePlaylistItem": DeletePlaylistItem,
	"UpdatePlaylistItemRequest": UpdatePlaylistItemRequest,
	"UpdatePlaylistItemResponse": UpdatePlaylistItemResponse,
	"UpdatePlaylistItem": UpdatePlaylistItem
};
