// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import { guards as autoguard } from "@joelek/ts-autoguard";

export type LoadingEvent = {
	"sessionID": number,
	"state": "loading"
};

export const LoadingEvent = autoguard.Object.of<LoadingEvent>({
	"sessionID": autoguard.Number,
	"state": autoguard.StringLiteral.of("loading")
});

export type PlayingEvent = {
	"sessionID": number,
	"state": "playing"
};

export const PlayingEvent = autoguard.Object.of<PlayingEvent>({
	"sessionID": autoguard.Number,
	"state": autoguard.StringLiteral.of("playing")
});

export type PausedEvent = {
	"sessionID": number,
	"state": "paused"
};

export const PausedEvent = autoguard.Object.of<PausedEvent>({
	"sessionID": autoguard.Number,
	"state": autoguard.StringLiteral.of("paused")
});

export type StoppedEvent = {
	"sessionID": number,
	"state": "stopped",
	"reason": string
};

export const StoppedEvent = autoguard.Object.of<StoppedEvent>({
	"sessionID": autoguard.Number,
	"state": autoguard.StringLiteral.of("stopped"),
	"reason": autoguard.String
});

export type Autoguard = {
	"LoadingEvent": LoadingEvent,
	"PlayingEvent": PlayingEvent,
	"PausedEvent": PausedEvent,
	"StoppedEvent": StoppedEvent
};

export const Autoguard = {
	"LoadingEvent": LoadingEvent,
	"PlayingEvent": PlayingEvent,
	"PausedEvent": PausedEvent,
	"StoppedEvent": StoppedEvent
};
